/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.fatec.view;

import br.com.fatec.dao.DAOComanda;
import br.com.fatec.model.ComandaModel;
import br.com.fatec.model.Produto;
import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Simone Velosa
 */
public class Pedidos extends javax.swing.JFrame {

    /**
     * Creates new form Comanda
     */
    public Pedidos() {
        initComponents();
    }
    ArrayList<ComandaModel> comandas = new ArrayList();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_kidelicia = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lbl_pedido = new javax.swing.JLabel();
        lbl_comanda = new javax.swing.JLabel();
        txt_comanda = new javax.swing.JTextField();
        lbl_id = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        lbl_produto = new javax.swing.JLabel();
        txt_produto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_comanda = new javax.swing.JTable();
        btn_salvar = new javax.swing.JButton();
        lbl_email2 = new javax.swing.JLabel();
        lbl_comandas = new javax.swing.JLabel();
        cmb_filtro = new javax.swing.JComboBox<String>();
        cmb_status1 = new javax.swing.JComboBox<String>();
        btn_sair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(950, 710));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        lbl_kidelicia.setBackground(new java.awt.Color(255, 0, 0));
        lbl_kidelicia.setFont(new java.awt.Font("Iskoola Pota", 1, 48)); // NOI18N
        lbl_kidelicia.setForeground(new java.awt.Color(255, 255, 255));
        lbl_kidelicia.setText("KiDel√≠cia");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(lbl_kidelicia)
                .addContainerGap(422, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_kidelicia)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 980, 80);

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(1000, 560));
        jPanel2.setPreferredSize(new java.awt.Dimension(2000, 680));

        lbl_pedido.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lbl_pedido.setForeground(new java.awt.Color(255, 0, 0));
        lbl_pedido.setText("PEDIDOS");

        lbl_comanda.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbl_comanda.setText("Comanda:");

        txt_comanda.setEditable(false);

        lbl_id.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbl_id.setText("ID:");

        txt_id.setEditable(false);

        lbl_produto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbl_produto.setText("Produto:");

        txt_produto.setEditable(false);
        txt_produto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_produtoActionPerformed(evt);
            }
        });

        tb_comanda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PRODUTO", "COMANDA", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_comanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_comandaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_comanda);

        btn_salvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_salvar.setText("SALVAR");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        lbl_email2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbl_email2.setText("Status:");

        lbl_comandas.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbl_comandas.setText("Comandas:");

        cmb_filtro.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmb_filtro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas", "Em Andamento", "Finalizado", "Pendente" }));
        cmb_filtro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_filtroActionPerformed(evt);
            }
        });

        cmb_status1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        cmb_status1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Em Andamento", "Finalizado", "Pendente" }));
        cmb_status1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_status1ActionPerformed(evt);
            }
        });

        btn_sair.setText("SAIR");
        btn_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_comanda)
                                .addGap(18, 18, 18)
                                .addComponent(txt_comanda, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(351, 351, 351)
                                .addComponent(lbl_email2)
                                .addGap(18, 18, 18)
                                .addComponent(cmb_status1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_id)
                                .addGap(78, 78, 78)
                                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_salvar)
                                .addGap(10, 10, 10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_produto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_produto, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_sair)
                                .addGap(18, 18, 18))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(lbl_comandas)
                        .addGap(18, 18, 18)
                        .addComponent(cmb_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 167, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(405, 405, 405)
                        .addComponent(lbl_pedido)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbl_pedido)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_comandas)
                    .addComponent(cmb_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_comanda)
                    .addComponent(txt_comanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_email2)
                    .addComponent(cmb_status1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_id)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_salvar))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_produto)
                    .addComponent(txt_produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_sair))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 980, 590);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_produtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_produtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_produtoActionPerformed

    private void cmb_filtroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_filtroActionPerformed
        // TODO add your handling code here:
        String escolha = cmb_filtro.getItemAt(cmb_filtro.getSelectedIndex());

        DefaultTableModel modelo = (DefaultTableModel) tb_comanda.getModel();
        modelo.setRowCount(0);

        switch (escolha) {
            case "Todas":
                //deve trazer ID(Produto), NomeProduto(Produto), Comanda(ComandaProduto) e Status(ComandaProduto)

                comandas = mostrarFiltrado("Todas");//envia o filto

                for (int i = 0; i < comandas.size(); i++) {//coloca na tabela os dados (ja filtrados)
                    ComandaModel comanda = comandas.get(i);
                    Produto produto = comanda.getProdutos().get(0);
                    modelo = (DefaultTableModel) tb_comanda.getModel();
                    modelo.addRow(new Object[]{produto.getId(), produto.getNomeProduto(), comanda.getIdComanda(), comanda.getStatus()});
                }
                break;

            case "Em Andamento":
                comandas = mostrarFiltrado("Em Andamento");//envia o filto

                for (int i = 0; i < comandas.size(); i++) {//coloca na tabela os dados (ja filtrados)
                    ComandaModel comanda = comandas.get(i);
                    Produto produto = comanda.getProdutos().get(0);
                    modelo = (DefaultTableModel) tb_comanda.getModel();
                    modelo.addRow(new Object[]{produto.getId(), produto.getNomeProduto(), comanda.getIdComanda(), comanda.getStatus()});
                }
                break;

            case "Finalizado":
                comandas = mostrarFiltrado("Finalizado");//envia o filto

                for (int i = 0; i < comandas.size(); i++) {//coloca na tabela os dados (ja filtrados)
                    ComandaModel comanda = comandas.get(i);
                    Produto produto = comanda.getProdutos().get(0);
                    modelo = (DefaultTableModel) tb_comanda.getModel();
                    modelo.addRow(new Object[]{produto.getId(), produto.getNomeProduto(), comanda.getIdComanda(), comanda.getStatus()});
                }
                break;

            case "Pendente":
                comandas = mostrarFiltrado("Pendente");//envia o filto

                for (int i = 0; i < comandas.size(); i++) {//coloca na tabela os dados (ja filtrados)
                    ComandaModel comanda = comandas.get(i);
                    Produto produto = comanda.getProdutos().get(0);
                    modelo = (DefaultTableModel) tb_comanda.getModel();
                    modelo.addRow(new Object[]{produto.getId(), produto.getNomeProduto(), comanda.getIdComanda(), comanda.getStatus()});
                }
                break;
        }


    }//GEN-LAST:event_cmb_filtroActionPerformed

    private void cmb_status1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_status1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_status1ActionPerformed

    private void tb_comandaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_comandaMouseClicked
        // TODO add your handling code here:
        txt_id.setText(String.valueOf(tb_comanda.getValueAt(tb_comanda.getSelectedRow(), 0)));
        txt_produto.setText(String.valueOf(tb_comanda.getValueAt(tb_comanda.getSelectedRow(), 1)));
        txt_comanda.setText(String.valueOf(tb_comanda.getValueAt(tb_comanda.getSelectedRow(), 2)));

        String filtro = String.valueOf(tb_comanda.getValueAt(tb_comanda.getSelectedRow(), 3));

        switch (filtro) {
            case "Em Andamento":
                cmb_status1.setSelectedIndex(1);
                break;

            case "Finalizado":
                cmb_status1.setSelectedIndex(2);
                break;

            case "Pendente":
                cmb_status1.setSelectedIndex(3);
                break;
        }
    }//GEN-LAST:event_tb_comandaMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tb_comanda.getModel();
        modelo.setRowCount(0);
        comandas = mostrarFiltrado("Todas");//envia o filto

        for (int i = 0; i < comandas.size(); i++) {//coloca na tabela os dados (ja filtrados)
            ComandaModel comanda = comandas.get(i);
            Produto produto = comanda.getProdutos().get(0);
            modelo = (DefaultTableModel) tb_comanda.getModel();
            modelo.addRow(new Object[]{produto.getId(), produto.getNomeProduto(), comanda.getIdComanda(), comanda.getStatus()});
        }
    }//GEN-LAST:event_formWindowOpened

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        // TODO add your handling code here:   
        if (cmb_status1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma op√ß√£o !");
        } else {
            DAOComanda daoComanda = new DAOComanda();
            ComandaModel comanda = new ComandaModel();
            Produto produto = new Produto();
            LinkedList<Produto> produtos = new LinkedList();

            produto.setId(Integer.parseInt(txt_id.getText()));//atribui ID do produto
            produto.setNomeProduto(txt_produto.getText());//atribui o nome do produto
            produtos.add(produto);//adiciona produto em peodutos(LinkedList)

            comanda.setIdComanda(Integer.parseInt(txt_comanda.getText()));
            comanda.setProdutos(produtos);//adiciona o produtos(linked) a comanda
            comanda.setStatus(cmb_status1.getItemAt(cmb_status1.getSelectedIndex()));//atribui o status ESCOLHIDO NA COMBO       
            daoComanda.alterarStatus(daoComanda.buscaComanda(comanda));//Altera o status no Banco e Procura comanda(status pq o resto ja tem...)
            JOptionPane.showMessageDialog(rootPane, "Altera√ß√£o realizada com sucesso !");

            /*TABELA VOLTA A SER O QUE ERA */
            
            DefaultTableModel modelo = (DefaultTableModel) tb_comanda.getModel();
            modelo.setRowCount(0);
            comandas = mostrarFiltrado(cmb_status1.getItemAt(cmb_status1.getSelectedIndex()));//mostra o item que alterou
            cmb_filtro.setSelectedIndex(cmb_status1.getSelectedIndex());

            /*
            for (int i = 0; i < comandas.size(); i++) {//coloca na tabela os dados (ja filtrados)
                comanda = comandas.get(i);
                produto = comanda.getProdutos().get(0);
                modelo = (DefaultTableModel) tb_comanda.getModel();
                modelo.addRow(new Object[]{produto.getId(), produto.getNomeProduto(), comanda.getIdComanda(), comanda.getStatus()});
            }
            */
        }
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void btn_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sairActionPerformed
        // TODO add your handling code here:
        Login login = new Login();
        login.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btn_sairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedidos().setVisible(true);
            }
        });
    }

    /**
     * 
     * <b> Devovlve uma lista de acordo com o filtro imposto no status </b>
     */
    public ArrayList<ComandaModel> mostrarFiltrado(String filtro) {
        DAOComanda daoComanda = new DAOComanda();
        ArrayList<ComandaModel> comandas = daoComanda.buscaTodasComandas();//adiciona todas as comandas do sistema
        ArrayList<ComandaModel> filtrado = new ArrayList();
        for (int i = 0; i < comandas.size(); i++) {
            ComandaModel comanda = comandas.get(i);
            if (comanda.getStatus().equals(filtro) || "Todas".equals(filtro)) {
                filtrado.add(comanda);//adiciona somente as comandas com filtro
            }
        }
        return filtrado;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_sair;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JComboBox<String> cmb_filtro;
    private javax.swing.JComboBox<String> cmb_status1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_comanda;
    private javax.swing.JLabel lbl_comandas;
    private javax.swing.JLabel lbl_email2;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_kidelicia;
    private javax.swing.JLabel lbl_pedido;
    private javax.swing.JLabel lbl_produto;
    private javax.swing.JTable tb_comanda;
    private javax.swing.JTextField txt_comanda;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_produto;
    // End of variables declaration//GEN-END:variables
}
